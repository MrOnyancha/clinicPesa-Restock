# kubectl config set-context --current --namespace=cp-gt
export GCP_PROJECT="clinicpesa-1"
export APPLICATION_NAME="cp-pharma"
export REGISTRY="gcr.io"
#export EVN="-t"
#export VERSION=20250621001_TEST
export EVN=""
export VERSION=20250728001_PROD

nvm use 20
rm -r dist
npm run build
#node src/patch.js && ng build;

cp ./GKE/kubernetes/dockerfile ./dist
cp ./GKE/kubernetes/nginx-custom.conf ./dist
# Generate the api docker --no-cache
docker build --platform linux/amd64,linux/arm64 --no-cache=true --output type=docker -t $REGISTRY/$GCP_PROJECT/$APPLICATION_NAME  ./dist

#docker login $REGISTRY -u $U_NAME --password-stdin $PSSWD
gcloud auth configure-docker $REGISTRY
# The version needs to be adapted to the one generated by the command above
# Rename the tag
docker tag $REGISTRY/$GCP_PROJECT/$APPLICATION_NAME:latest us-docker.pkg.dev/$GCP_PROJECT/$REGISTRY/$APPLICATION_NAME:$VERSION
#docker tag $APPLICATION_NAME:latest $REGISTRY/$GCP_PROJECT/$APPLICATION_NAME:$VERSION
# Push to the GCP container repository
docker -- push us-docker.pkg.dev/$GCP_PROJECT/$REGISTRY/$APPLICATION_NAME:$VERSION

git commit -am "TAG:"$VERSION


echo "kubectl -n cp-gt$EVN set image  deployment/cp-pharma  cp-pharma=us-docker.pkg.dev/$GCP_PROJECT/$REGISTRY/$APPLICATION_NAME:$VERSION"
echo "kubectl -n cp-gt$EVN rollout status deployment/cp-pharma"


#kubectl create secret docker-registry gcr-json-key \
#  --docker-server=us-docker.pkg.dev \
#  --docker-username=oauth2accesstoken \
#  --docker-password="$(gcloud auth print-access-token)" \
#  --docker-email=clinicpesaafrica@gmail.com \
#  --namespace=cp-gt

#spec:
#  imagePullSecrets:
#    - name: gcr-json-key
